{"version":3,"sources":["ApiCalls/index.js","components/Categories.js","components/Footer.js","components/Header.js","components/Hero.js","components/Joke.js","components/Jokes.js","App.js","reportWebVitals.js","index.js"],"names":["url","getCategories","a","axios","get","Categories","setCategory","useState","categories","setCategories","useEffect","then","e","console","log","data","className","map","category","onClick","Footer","Header","Hero","setFilter","search","setSearch","onChange","target","value","placeholder","icon","faSearch","Joke","props","history","useNavigate","joke","setJoke","window","state","usr","Jokes","filter","jokes","setJokes","page","setPage","getDefaultJokes","getJokeByCategory","query","searchJokes","result","slice","length","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a6af20b.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst url = 'https://api.chucknorris.io/jokes/'\n\nexport const getCategories = async () => {\n\n    return axios.get(`${url}/categories`)\n}\n\nexport const searchJokes = (query) => {\n\n    return axios.get(`${url}/search?query=${query}`)\n\n}\n\nexport const getJokeByCategory = (category) => {\n    return axios.get(`${url}/random?category=${category}`)\n}","import React, { useEffect, useState } from 'react';\nimport { getCategories } from '../ApiCalls';\n\nconst Categories = ({setCategory}) => {\n\n    const [categories, setCategories] = useState([])\n\n    useEffect(()=>{\n        getCategories().then(e=>{\n            console.log(e.data,'llll')\n            setCategories(e.data)\n        })\n        console.log(getCategories())\n        \n      },[])\n    \n    return (\n        <div className=\"grid categories\">\n            <div className=\"grid-content items\">\n                {\n                    categories.map(category=> <div onClick={()=> setCategory(category)} className=\"category\">\n                                                    {category}\n                                                </div>)\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default Categories;","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <div className=\"grid\">\n                <div className=\"grid-content\">\n                    <h4>Got jokes? get paid</h4>\n                    <h4>for submiting!</h4>\n                    <button className=\"btn\">Submit joke &rarr;</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\n\nconst Header = () => {\n    return (\n        <header className=\"header grid\">\n            <div className=\"grid-content\">\n                <nav className=\"header-nav\">\n                    <ul className=\"list-container\">\n                        <li className=\"item\">so funktioniert's</li>\n                        <li className=\"item\">sonderangebote</li>\n                        <li className=\"item\">mein bereich</li>\n                    </ul>\n                </nav>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nconst Hero = ({setFilter}) => {\n\n    const [search, setSearch] = useState('')\n    return (\n        <div className=\"hero\">\n            \n            <h1 className=\"heading\">The Joke Bible</h1>\n            <h3>Daily laughs for you and yours</h3>\n\n            <div className=\"filter-section\">\n                <input onChange={(e)=> setSearch(e.target.value)} className=\"input\" placeholder=\"How can we make you laugh today\"/>\n                <div className=\"icon\" onClick={()=> setFilter(search)}>\n                    <FontAwesomeIcon icon={faSearch} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Hero;","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Joke = (props) => {\n    const history = useNavigate()\n    const [joke, setJoke] = useState({})\n\n    useEffect(()=>{\n        console.log(history)\n        setJoke(window.history.state.usr)\n    },[])\n    return (\n        <div className=\"grid single-joke\">\n            <div className=\"grid-content\">\n                <div className=\"joke\">\n                    {/* <h3>{joke.categories[0] || 'Random'} joke</h3> */}\n                    <p>{joke.value}</p>\n\n                </div>\n            </div>\n            \n        </div>\n    );\n};\n\nexport default Joke;","import React, { useEffect, useState } from 'react';\nimport { getJokeByCategory, searchJokes } from '../ApiCalls';\nimport {useNavigate} from 'react-router-dom'\n\nconst Jokes = ({category, filter}) => {\n\n    const [jokes, setJokes] = useState([])\n    const [page, setPage] = useState(0)\n    const history = useNavigate()\n\n    useEffect(()=>{\n        \n        if(filter===''){\n            getDefaultJokes('cat')\n        }else {\n            getDefaultJokes(filter)\n        }\n        \n    },[filter])\n\n    useEffect(()=>{\n        getJokeByCategory(category).then(e=>{\n            console.log(e.data)\n            setJokes([e.data])\n            setPage(0)\n        })\n    },[category])\n\n    const getDefaultJokes = (query) => {\n        searchJokes(query).then(e=>{\n            setJokes([...e.data.result])\n            console.log(e.data.result)\n        })\n    } \n\n    return (\n        <div className=\"grid\">\n            <div className=\"grid-content jokes\">\n                <p className=\"header\">{category} joke</p>\n\n                <div className=\"joke-list\">\n                    {\n                        jokes.map(joke=> <div onClick={()=> history(\"/joke\", { state: joke })} className=\"joke\">\n                                            <h3>{joke.categories[0] || 'Random'} joke</h3>\n                                            <p>{joke.value}</p>\n\n                                            <div className=\"cta\">\n                                                <button className=\"btn\">see stats &rarr;</button>\n                                            </div>\n                                        </div>).slice(9*page, 9*(page+1))\n                    }\n                    <div className=\"cta\">\n                        <button onClick={()=>{\n                            if(page>0){\n                                setPage(page-1)\n                            }\n                        }}>prev</button>\n                        <button onClick={()=>{\n                            if(page+1 < jokes.length/9){\n                                setPage(page+1)\n                            }\n                        }}>nexte</button>\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Jokes;","import { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Redirect } from 'react-router-dom';\nimport { getCategories } from './ApiCalls';\nimport Categories from './components/Categories';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Hero from './components/Hero';\nimport Joke from './components/Joke';\nimport Jokes from './components/Jokes';\nimport './sytles/App.scss';\n\nfunction App() {\n\n  const [category, setCategory] = useState('')\n  const [filter, setFilter] = useState('')\n\n \n  return (\n    <div className=\"App\">\n      <Header/>\n      <Hero setFilter={setFilter} />\n      <Router>\n        <Routes>\n          <Route path='/joke' element={<Joke/>}/>\n          <Route path='/' element={\n            <div>\n            <Categories setCategory={setCategory}/>\n             <Jokes filter={filter} category={category} />\n            </div>\n          }/>\n           \n        </Routes>\n      </Router>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}